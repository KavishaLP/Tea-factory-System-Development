CREATE TABLE farmer_payments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT,  -- Changed to INT to match users' id
  paymentPerKilo DECIMAL(10, 2) NOT NULL,
  finalTeaKilos DECIMAL(10, 2) NOT NULL,
  paymentForFinalTeaKilos DECIMAL(10, 2) NOT NULL,
  additionalPayments DECIMAL(10, 2) DEFAULT 0,
  transport DECIMAL(10, 2) DEFAULT 0,
  directPayments DECIMAL(10, 2) DEFAULT 0,
  finalAmount DECIMAL(10, 2) NOT NULL,
  advances DECIMAL(10, 2) DEFAULT 0,
  teaPackets DECIMAL(10, 2) DEFAULT 0,
  fertilizer DECIMAL(10, 2) DEFAULT 0,
  finalPayment DECIMAL(10, 2) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES farmeraccounts(userId) ON DELETE CASCADE
);

CREATE TABLE employeeaccounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userId VARCHAR(255) UNIQUE NOT NULL,
    firstName VARCHAR(255) NOT NULL,
    lastName VARCHAR(255) NOT NULL,
    mobile1 VARCHAR(20) NOT NULL,
    mobile2 VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE employee_payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userId VARCHAR(255) NOT NULL,
    salaryAmount DECIMAL(10,2) NOT NULL,
    additionalPayments DECIMAL(10,2) DEFAULT 0,
    deductions DECIMAL(10,2) DEFAULT 0,
    finalPayment DECIMAL(10,2) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE advance_payment (
    advn_id INT AUTO_INCREMENT PRIMARY KEY,
    userId VARCHAR(100) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    date DATE NOT NULL,
    action ENUM('Pending', 'Approved', 'Rejected') NOT NULL DEFAULT 'Pending',
    FOREIGN KEY (userId) REFERENCES farmeraccounts(userId) ON DELETE CASCADE
);